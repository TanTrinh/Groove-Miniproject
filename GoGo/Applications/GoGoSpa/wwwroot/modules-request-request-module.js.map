{"version":3,"sources":["webpack:///./src/app/modules/request/request-form/request-form.component.html","webpack:///./src/app/modules/request/request-form/request-form.component.scss","webpack:///./src/app/modules/request/request-form/request-form.component.ts","webpack:///./src/app/modules/request/request-list/request-list.component.html","webpack:///./src/app/modules/request/request-list/request-list.component.scss","webpack:///./src/app/modules/request/request-list/request-list.component.ts","webpack:///./src/app/modules/request/request-routing.module.ts","webpack:///./src/app/modules/request/request.module.ts","webpack:///./src/app/modules/request/request.service.ts"],"names":[],"mappings":"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","file":"modules-request-request-module.js","sourcesContent":["module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"border-custom\\\">\\r\\n    <h1 [hidden]=\\\"!isCreateFormMode\\\">Create Request</h1>\\r\\n    <h1 [hidden]=\\\"!isUpdateFormMode\\\">Update Request</h1>\\r\\n    <h1 [hidden]=\\\"!isViewFormMode\\\">Request Detail</h1>\\r\\n  </div>\\r\\n  <div class=\\\"container-fluid pt-3\\\">\\r\\n    \\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4 col-lg-4\\\">\\r\\n        <form #mainForm=\\\"ngForm\\\" name=\\\"mainForm\\\" (ngSubmit)=\\\"onSubmitForm(mainForm)\\\">\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"receiverName\\\">Receiver Name </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"formData.receiverName\\\" name=\\\"receiverName\\\" #receiverName=\\\"ngModel\\\" required [disabled]=\\\"isViewFormMode\\\">\\r\\n            <div *ngIf=\\\"receiverName.invalid && (receiverName.dirty || receiverName.touched)\\\"\\r\\n                 class=\\\"alert alert-danger\\\">\\r\\n              <div *ngIf=\\\"receiverName.errors.required\\\">\\r\\n                Receiver Name is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"receiverPhoneNumber\\\">Receiver PhoneNumber</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"formData.receiverPhoneNumber\\\" name=\\\"receiverPhoneNumber\\\" #receiverPhoneNumber=\\\"ngModel\\\" required [disabled]=\\\"isViewFormMode\\\">\\r\\n            <div *ngIf=\\\"receiverPhoneNumber.invalid && (receiverPhoneNumber.dirty || receiverPhoneNumber.touched)\\\"\\r\\n                 class=\\\"alert alert-danger\\\">\\r\\n              <div *ngIf=\\\"receiverPhoneNumber.errors.required\\\">\\r\\n                Receiver PhoneNumber is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"packageQuantity\\\">Package Quantity</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"formData.packageQuantity\\\" name=\\\"packageQuantity\\\" #packageQuantity=\\\"ngModel\\\" required [disabled]=\\\"isViewFormMode\\\">\\r\\n            <div *ngIf=\\\"packageQuantity.invalid && (packageQuantity.dirty || packageQuantity.touched)\\\"\\r\\n                 class=\\\"alert alert-danger\\\">\\r\\n              <div *ngIf=\\\"packageQuantity.errors.required\\\">\\r\\n                Package Quantity is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"pickingDate\\\">Picking Date</label>\\r\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"formData.pickingDate\\\" name=\\\"pickingDate\\\" #pickingDate=\\\"ngModel\\\" required [disabled]=\\\"isViewFormMode\\\" type=\\\"datetime-local\\\">\\r\\n            <div *ngIf=\\\"pickingDate.invalid && (pickingDate.dirty || pickingDate.touched)\\\"\\r\\n                 class=\\\"alert alert-danger\\\">\\r\\n              <div *ngIf=\\\"pickingDate.errors.required\\\">\\r\\n                Picking Date is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"DeliveryDate\\\">Expected Date</label>\\r\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"formData.expectedDate\\\" name=\\\"expectedDate\\\" #expectedDate=\\\"ngModel\\\" required [disabled]=\\\"isViewFormMode\\\" type=\\\"datetime-local\\\">\\r\\n            <div *ngIf=\\\"expectedDate.invalid && (expectedDate.dirty || expectedDate.touched)\\\"\\r\\n                 class=\\\"alert alert-danger\\\">\\r\\n              <div *ngIf=\\\"expectedDate.errors.required\\\">\\r\\n                Expected Date is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\" *ngIf=\\\"!isViewFormMode\\\">\\r\\n            <label for=\\\"wareHouseId\\\">Warehouse</label>\\r\\n            <select class=\\\"form-control\\\" [(ngModel)]=\\\"formData.wareHouseId\\\" name=\\\"wareHouseId\\\" #wareHouseId=\\\"ngModel\\\" [disabled]=\\\"isViewFormMode\\\" required>\\r\\n              <option value=\\\"{{formData.wareHouseId}}\\\" selected hidden>{{formDataSource.CurrentWarehouse}}</option>\\r\\n              <option *ngFor=\\\"let item of formDataSource.WarehouseList\\\" value=\\\"{{item.id}}\\\">{{item.nameWarehouse}}</option>\\r\\n            </select>\\r\\n            <div *ngIf=\\\"wareHouseId.invalid && (wareHouseId.dirty || wareHouseId.touched)\\\"\\r\\n                 class=\\\"alert alert-danger\\\">\\r\\n              <div *ngIf=\\\"wareHouseId.errors.required\\\">\\r\\n                Warehouse is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\" *ngIf=\\\"isViewFormMode\\\">\\r\\n            <label for=\\\"address\\\">Warehouse</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"formDataSource.CurrentWarehouse\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [disabled]=\\\"true\\\">\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"address\\\">Delivery Address</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"formData.address\\\" name=\\\"address\\\" #address=\\\"ngModel\\\" required [disabled]=\\\"isViewFormMode\\\">\\r\\n            <div *ngIf=\\\"address.invalid && (address.dirty || address.touched)\\\"\\r\\n                 class=\\\"alert alert-danger\\\">\\r\\n              <div *ngIf=\\\"address.errors.required\\\">\\r\\n                Delivery Address is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"deliveryLatitude\\\">Delivery Latitude</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"formData.deliveryLatitude\\\" name=\\\"deliveryLatitude\\\" #deliveryLatitude=\\\"ngModel\\\" required [disabled]=\\\"isViewFormMode\\\">\\r\\n            <div *ngIf=\\\"deliveryLatitude.invalid && (deliveryLatitude.dirty || deliveryLatitude.touched)\\\"\\r\\n                 class=\\\"alert alert-danger\\\">\\r\\n              <div *ngIf=\\\"deliveryLatitude.errors.required\\\">\\r\\n                Delivery Latitude is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group \\\">\\r\\n            <label for=\\\"deliveryLongitude\\\">Delivery Longitude</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"formData.deliveryLongitude\\\" name=\\\"deliveryLongitude\\\" #deliveryLongitude=\\\"ngModel\\\" required [disabled]=\\\"isViewFormMode\\\">\\r\\n            <div *ngIf=\\\"deliveryLongitude.invalid && (deliveryLongitude.dirty || deliveryLongitude.touched)\\\"\\r\\n                 class=\\\"alert alert-danger\\\">\\r\\n              <div *ngIf=\\\"deliveryLongitude.errors.required\\\">\\r\\n                Delivery Longitude is required.\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"btn-wrapper\\\">\\r\\n            <!-- Create / View -->\\r\\n            <button *ngIf=\\\"!isUpdateFormMode\\\" type=\\\"submit\\\" class=\\\"btn btn-custom mr-1\\\" (click)=\\\"onNavigateToListPage()\\\">Back to List</button>\\r\\n\\r\\n            <!-- Update -->\\r\\n            <button *ngIf=\\\"isUpdateFormMode\\\" type=\\\"submit\\\" class=\\\"btn btn-custom mr-1\\\" (click)=\\\"onNavigateToViewPage()\\\">Cancel</button>\\r\\n\\r\\n            <!-- Create / Update -->\\r\\n            <button *ngIf=\\\"!isViewFormMode\\\" type=\\\"submit\\\" class=\\\"btn btn-custom\\\">Save</button>\\r\\n\\r\\n            <!-- View -->\\r\\n            <button *ngIf=\\\"isViewFormMode\\\" routerLink=\\\"/request/form/update/{{formData?.id}}\\\" class=\\\"btn btn-custom\\\">Update</button>\\r\\n\\r\\n          </div>\\r\\n\\r\\n\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-8 col-lg-8 \\\">\\r\\n        <p>Map here!</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBaseComponent, FormValidationService } from '../../../shared/component/form';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NotificationService } from '../../../shared/component/dialog/notification.service';\r\nimport { RequestService } from '../request.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Observable } from 'rxjs';\r\nimport { forEach } from '@angular/router/src/utils/collection';\r\n\r\n@Component({\r\n  selector: 'app-request-form',\r\n  templateUrl: './request-form.component.html',\r\n  styleUrls: ['./request-form.component.scss']\r\n})\r\n\r\nexport class RequestFormComponent extends FormBaseComponent implements OnInit {\r\n\r\n  public onAfterGetData(res, formData) {\r\n    for (var i = 0; i < res.length; i++) {\r\n      if (res[i].id = formData.wareHouseId) {\r\n        var temp = res[i].nameWarehouse;\r\n      }\r\n    }\r\n    return temp;\r\n  }\r\n  constructor(protected route: ActivatedRoute,\r\n    protected router: Router,\r\n    protected requestService: RequestService,\r\n    protected notificationService: NotificationService,\r\n    protected validationService: FormValidationService,\r\n    private _notificationService: NotificationService,\r\n  ) {\r\n    super(route, router, notificationService, requestService, validationService);\r\n    this.formConfiguration.dataSourceMapper.add('WarehouseList', requestService);\r\n    this.formConfiguration.dataSourceMapper.add('CurrentWarehouse', requestService, this.onAfterGetData);\r\n    super.formOnInit(\"Request\", {});\r\n\r\n  }\r\n  ngOnInit() {\r\n   \r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"border-custom\\\">\\r\\n    <h1>Request Management</h1>\\r\\n  </div>\\r\\n  <div class=\\\"py-3\\\">\\r\\n    <button class=\\\"btn btn-success\\\" routerLink=\\\"/request/form/create\\\">Create Request</button>\\r\\n  </div>\\r\\n  <table class=\\\"table table-hover\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>ID</th>\\r\\n        <th>Adress</th>\\r\\n        <th>Phone Number</th>\\r\\n        <th>Owner</th>\\r\\n        <th>GPS</th>\\r\\n        <th></th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr>\\r\\n        <td>001</td>\\r\\n        <td>132 Hàm Nghi, Quận 1, TP.Hồ Chí Minh</td>\\r\\n        <td>0169696969</td>\\r\\n        <td>Nguyễn Văn Tư</td>\\r\\n        <td>...</td>\\r\\n        <td>\\r\\n          <button class=\\\"btn btn-custom\\\" routerLink=\\\"/request/edit\\\">Edit</button> &nbsp;\\r\\n          <button class=\\\"btn btn-custom\\\" data-toggle=\\\"modal\\\" data-target=\\\"#CancelModal\\\">Delete</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td>001</td>\\r\\n        <td>132 Hàm Nghi, Quận 1, TP.Hồ Chí Minh</td>\\r\\n        <td>0169696969</td>\\r\\n        <td>Nguyễn Văn Tư</td>\\r\\n        <td>...</td>\\r\\n        <td>\\r\\n          <button class=\\\"btn btn-custom\\\" (onClick)=\\\"onClickActivate()\\\">Activate</button> &nbsp;\\r\\n          <button class=\\\"btn btn-custom\\\" (onClick)=\\\"onClickDeactivate()\\\">Deactivate</button> &nbsp;\\r\\n          <button class=\\\"btn btn-custom\\\" data-toggle=\\\"modal\\\" data-target=\\\"#CancelModal\\\">Delete</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td>001</td>\\r\\n        <td>132 Hàm Nghi, Quận 1, TP.Hồ Chí Minh</td>\\r\\n        <td>0169696969</td>\\r\\n        <td>Nguyễn Văn Tư</td>\\r\\n        <td>...</td>\\r\\n        <td>\\r\\n          <button class=\\\"btn btn-custom\\\" routerLink=\\\"/request/edit\\\">Edit</button> &nbsp;\\r\\n          <button class=\\\"btn btn-custom\\\" data-toggle=\\\"modal\\\" data-target=\\\"#CancelModal\\\">Delete</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <!--Cancel Modal-->\\r\\n  <div class=\\\"modal fade\\\" id=\\\"CancelModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"CancelModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h5 class=\\\"modal-title\\\" id=\\\"CancelModalLabel\\\">Cancel</h5>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          Are you sure?\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Confirm</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { RequestService } from '../request.service';\r\n\n@Component({\n  selector: 'app-request-list',\n  templateUrl: './request-list.component.html',\n  styleUrls: ['./request-list.component.scss']\n})\nexport class RequestListComponent implements OnInit {\n\n  constructor(private _requestService: RequestService) {\r\n\r\n  }\n  onClickActivate() {\n    //this._requestService.\r\n  }\n  onClickDeactivate() {\n\r\n  }\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RequestListComponent } from './request-list/request-list.component';\r\nimport { RequestFormComponent } from './request-form/request-form.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'list', component: RequestListComponent },\r\n  { path: 'form/:mode/:id', component: RequestFormComponent }, // View / Edit\r\n  { path: 'form/:mode', component: RequestFormComponent }      // Create\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n  declarations: []\r\n})\r\nexport class RequestRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RequestListComponent } from './request-list/request-list.component';\r\nimport { RequestFormComponent } from './request-form/request-form.component';\r\nimport { RequestRoutingModule } from './request-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RequestRoutingModule,\r\n    FormsModule,\r\n  ],\r\n  declarations: [\r\n    RequestListComponent,\r\n    RequestFormComponent,\r\n  ]\r\n})\r\nexport class RequestModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { ICreateFormService, IViewFormService, IUpdateFormService, IDataSourceService } from '../../shared/component/form';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthHttpService } from '../../shared';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RequestService implements ICreateFormService, IViewFormService, IUpdateFormService, IDataSourceService {\r\n  \r\n  getDataSource(): Observable<any> { // warehouseList\r\n    return this._apiHttp.get(`/api/warehouse/customer/77`); //get id from claim\r\n  }\r\n  edit(id: any, formData: any): Observable<any> {\r\n    return this._apiHttp.put(`/api/request/${id}`, formData);\r\n  }\r\n\r\n  getFormData(id: any): Observable<any> { // for view\r\n    return this._apiHttp.get(`/api/request/${id}`);\r\n  }\r\n\r\n  create(formData: any): Observable<any> {\r\n    console.log(formData);\r\n    return this._apiHttp.post(`/api/request`, formData);\r\n  }\r\n\r\n  getViewFormUrl(id: any): string {\r\n    return `/request/form/view/${id}`;\r\n  }\r\n\r\n  getListPageUrl(): string {\r\n    return `/request/list`;\r\n  }\r\n\r\n  constructor(private _apiHttp: AuthHttpService) {\r\n\r\n  }\r\n}\r\n"],"sourceRoot":""}